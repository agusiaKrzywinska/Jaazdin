"const { dialogUtils, genericUtils } = chrisPremades.utils;\n\nconst ammoWeapons = workflow.actor.items.filter((item) => {\n    if (!item.type === \"weapon\") {\n        return false;\n    }\n    if (!item.system?.properties) {\n        return false;\n    }\n    if (!item.system.properties.has(\"amm\")) {\n        return false;\n    }\n    if (item.system?.uses?.value === null) {\n        return false;\n    }\n    return true;\n});\n\nif (ammoWeapons.length === 0) {\n    genericUtils.notify('Reload | No weapons found to reload', 'warn')\n    return;\n}\n\nconst weaponId = await dialogUtils.selectDialog(\"Select Weapon\", \"Reload\", {\n    label: \"Select a weapon to reload\",\n    name: \"selectedWeapon\",\n    options: {\n        options: ammoWeapons.map((item) => {\n            return {\n                label: `${item.name} (${item.system.uses.value}/${item.system.uses.max})`,\n                value: item._id,\n            };\n        }),\n    },\n});\n\nif (!weaponId && weaponId !== 0) {\n    genericUtils.notify('Reload | No weapon selected', 'warn');\n    return;\n}\n\nconst ammo = workflow.actor.items.filter((item) => {\n    if (item.type !== \"consumable\") {\n        return false;\n    }\n    if (item.system?.type?.value !== \"ammo\") {\n        return false;\n    }\n    if (!item.system?.quantity || item.system.quantity <= 0) {\n        return false;\n    }\n    return true;\n});\n\nif (!ammo || ammo.length === 0) {\n    genericUtils.notify('Reload | No ammo found', 'warn');\n    return;\n}\n\nconst ammoId = await dialogUtils.selectDialog(\"Select Ammo\", \"Reload\", {\n    label: \"Select ammo to use\",\n    name: \"selectedAmmo\",\n    options: {\n        options: ammo.map((item) => {\n            return {\n                label: `${item.name} (${item.system.quantity})`,\n                value: item._id,\n            };\n        }),\n    },\n});\n\nif (!ammoId) {\n    genericUtils.notify('Reload | No ammo selected', 'warn');\n    return;\n}\n\nselectedWeapon = workflow.actor.items.get(weaponId);\nselectedAmmo = workflow.actor.items.get(ammoId);\n\nconst clipSize = selectedWeapon.system.uses.max;\nconst loadedAmmo = selectedWeapon.system.uses.value;\nconst unloadedAmmo = selectedAmmo.system.quantity;\nif (unloadedAmmo <= 0) {\n    genericUtils.notify('Reload | No ammo available to load', 'warn');\n    return;\n}\nif (loadedAmmo >= clipSize) {\n    genericUtils.notify('Reload | Weapon is already fully loaded', 'warn');\n    return;\n}\nconst ammoToLoad = Math.min(clipSize - loadedAmmo, unloadedAmmo);\nawait selectedWeapon.update({\n    \"system.uses.value\": loadedAmmo + ammoToLoad,\n});\nawait selectedAmmo.update({\n    \"system.quantity\": unloadedAmmo - ammoToLoad,\n});\nawait workflow.actor.sheet.render(true);\n"